<apex:page controller="GanttDetailPageController" standardStylesheets="false" sidebar="false" id="pg" docType="html-5.0" tabStyle="Gantt__tab">
    <apex:includeScript value="/soap/ajax/29.0/connection.js"/>
    <apex:includeScript value="/soap/ajax/29.0/apex.js"/>
    <script src="https://export.dhtmlx.com/gantt/api.js"></script>
    <link href="//netdna.bootstrapcdn.com/font-awesome/3.1.1/css/font-awesome.min.css" rel="stylesheet"/>
   
    <style>
        #outerDiv{
    height:500px;
    overflow:hidden;
    }
    BODY {
        overflow:hidden  !important;
    }
    .gantt_task_content > #mrkt_activity { display:none;}
    .gantt_task_content > #task { display:none;}
    .downloadOptions {
        	height:24px !important;
            width: 28px !important;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            padding: 0px ;
            -moz-border-radius: 0px;
            -webkit-border-radius: 0px;
            border-radius: 0px;
            border: 0px solid #B8B8B8;
            margin: 0px 7px;
            margin-top:2px ;
            cursor: pointer;
        }
        #PDF {
            background:url("{!URLFOR($Resource.musqot__pdf_icon)}")no-repeat;
        }
        #xlsx {
            background:url("{!URLFOR($Resource.musqot__xlsx_icon)}")no-repeat;
        }
    	#png {
            background:url("{!URLFOR($Resource.musqot__PNG_Icon)}")no-repeat;
        }
    	.downloadIcon {
            height:24px !important;
            width: 28px !important;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            background:url("{!URLFOR($Resource.Download)}")no-repeat;
            padding: 0px ;
            -moz-border-radius: 0px;
            -webkit-border-radius: 0px;
            border-radius: 0px;
            border: 0px solid #B8B8B8;
            margin:0px ;
            margin-top:2px ;
            cursor: pointer;
        }
    .gantt_grid_head_cell{
    text-align: left;
    padding-left: 45px;
    padding-top: 3px;    
      }  
    .gantt_task_content > img{
        float:right;
        vertical-align:middle;
        padding:1px;
    }
    .noTableFooter{ margin-left: 0px !important; }
    .bPageFooter{ padding: 5px !important; }
    
    .weekend{ background: #dedede !important;}
    .activity_task{
        border:2px solid #BFC518;
        color:#6ba8e3;
        background: #F6F6D6;
    }
             .activity_task .gantt_task_progress{
                 background:#D9DF29;
             }
             .popup-progress {
                 width:100%;
                 height:20px;
                 border: 3px solid #6EB638;
                 background:#7ED43E;
                 display:block;
                 -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box;
                 text-align: center;
             }
             .popup-description {
                 display: block;
                 width: 100%
                     height: 30px;
                 overflow: auto;
                 border-bottom: 1px solid #E4E4E4;
                 color:red;
                 
             }
             .gantt_tree_content img{
                 padding:3px !important;
                 height:20px !important;
                 width:20px !important;
                 padding-top: 7px !important;
             }
             
             .gantt_row .gantt_cell:first-child{width: 75% !important;}
         	 .gantt_grid_head_text {width: 55.5%; !important}
             
             .gantt_cell gantt_last_cell > img {
                 padding:5% 0 0 85%;
             }
             
             .topButton {
                 color: #696666 !important;
                 font-weight:600;
                 box-shadow: 0px 0px 0px 0px green #fff ;
                 -webkit-box-shadow: 0px 0px 0px 0px red #fff ;
                 -moz-box-shadow: 0px 0px 0px 0px #fff ;
                 padding: 0px 8px;
                 -moz-border-radius: 2px;
                 -webkit-border-radius: 2px;
                 border-radius: 2px;
                 border: 1px solid #B8B8B8;
                 background: #F9FAFE;
                 height:22px;
             }
             .topButton:hover {
                 color: #FFFFFF !important;
                 background: #00A0DE;
             }
             .topButton:visited {
                 color: #696666 !important;
                 background: #F9FAFE;
             }
             .topButton:active {
                 color: #696666 !important;
                 background: #00A0DE;
             } 
             .redFont{
                 color:#B50909;
             }                           
             .expButton
             {
                 width: 21px;
                 cursor: pointer;
             }
             #gantt{
                 margin:0px !important;
             }
             {!JSENCODE(taskstyleString)}
             {!JSENCODE(styleString)}
             
        .custPopup{
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9999;
            left: 18px;
            padding:10px;
            position: absolute;
            /* These are the 3 css properties you will need to change so the popup 
            displays in the center of the screen. First set the width. Then set 
            margin-left to negative half of what the width is. You can add 
            the height property for a fixed size pop up if you want.*/
            width: 500px;
            margin-left: 0px;
            top:10px;
        }
        .popupBackground{
            background-color:black;
            opacity: 0.20;
            filter: alpha(opacity = 20);
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 9998;
        }
    #ganttNav {
                position: absolute;
                height: 30px;
                display:block;
                z-index: 100;
                width:70px;
            }
            
            #ganttNavMenu {
                -moz-box-shadow: 0 2px 4px rgba(127, 127, 127, .3);
                -webkit-box-shadow: 0 2px 4px rgba(127, 127, 127, .3);
                box-shadow: 0 2px 4px rgba(127, 127, 127, .3);
                padding: 1px  !important;
                background-color: #fff;
                margin-top: 0px  !important;
                left: auto;
                right: 0;
                width: 150px
            }
            
            .ganttmenuButtonActivated #ganttNavMenu {
                border: 1;
                -moz-border-radius-bottomright: 3px;
                -moz-border-radius-bottomleft: 3px;
                -webkit-border-bottom-right-radius: 3px;
                -webkit-border-bottom-left-radius: 3px;
                border-bottom-right-radius: 3px;
                border-bottom-left-radius: 3px
            }
            
            #ganttNavMenu.ganttmenuWidthExtended {
                -moz-border-radius-topleft: 3px;
                -webkit-border-top-left-radius: 3px;
                border-top-left-radius: 3px;
                padding-top:13px ;
               
            }
            //
            .context-size { 
            max-height: 300px; 
            overflow-y: scroll; 
            }
            #ganttNavMenu a {
                color: #333435;
                -moz-border-radius: 3px;
                -webkit-border-radius: 3px;
                border-radius: 3px;
                text-decoration: none;
                margin: 0px;
                display:block ;
            }           
            
            #ganttNavMenu a:hover {
                color: #015ba7 ;
            }
            
            #ganttNavMenu.ganttmenuWidthExtended {
                -moz-border-radius-topleft: 3px;
                -webkit-border-top-left-radius: 3px;
                border-top-left-radius: 3px;
                padding-top: 13px;
               
            }
            
            .ganttmenuButton .ganttmenuButtonMenu {
                background-color:#f6f6f6 !important;
                border: 1px solid #7d7d7d;
                border-top: 0;
                -moz-box-shadow: 0 1px 5px #727272;
                -webkit-box-shadow: 0 1px 5px #727272;
                box-shadow: 0 1px 5px #727272;
                padding: 0;
            }
            .ganttmenuButton .ganttmenuButtonMenu a:hover {
                background: #e3f3ff none;
                color: #015ba7;
                border: 0;
                text-decoration: underline;
                cursor: pointer;
            }
            .ganttmenuButton .ganttmenuButtonMenu a {
                background-color: transparent;
                border: 0;
                padding-top: 2px ;
                padding-left:  4px ;
                font-weight: normal;
                font-size: 1em;
            }
    
            .ganttmenuButton .ganttmenuButtonMenu a{border-bottom: 1px solid #dfdfdf;}
         	.ganttmenuButton .ganttmenuButtonMenu a:last-child{border-bottom: 0px;}
            
            .gantt_grid_data .gantt_row.odd:hover,.gantt_grid_data .gantt_row:hover{background-color:#f6f6f6;}
    
            .ganttmenuButton {
                margin: 0;
                padding: 0;
                display: inline-block;
            }
   
            .gantt_selected {
                background-color: #f6f6f6 !important;
            }
            .gantt_tree_icon.gantt_Task{background-image:url("{!URLFOR($Resource.musqot__Gantt_Task)}")}
            .gantt_tree_icon.gantt_Marketingact{background-image:url("{!URLFOR($Resource.musqot__Gantt_Marketingact)}")}
            .gantt_tree_icon.gantt_Project{background-image:url("{!URLFOR($Resource.musqot__Gantt_Project)}")}
            .gantt_tree_icon.gantt_Plan{background-image:url("{!URLFOR($Resource.musqot__Gantt_Plan)}")}
                                                                                    
            /* Confirm Box Style - start - */
         .lower button::-moz-focus-inner {
             border:0;
             padding:0
         }
         .lower button {
             width:auto;
             border:0 none;
             margin:0;
             padding:0;
             background:transparent;
             overflow:visible;
             font:14px arial, sans-serif;
             #vertical-align:middle; /* IE6,IE7 */
         }
        
         .popup {
             display: none;
             position: absolute;
             left: 36%;
             top: 100px;
             width: 400px;
             z-index: 10010;
         }
        
         .upper {
             box-sizing:border-box;
             padding: 6% 8% 3% 8%;
             background: #eee;
             height: auto;
             font-family:helvetica;
             color: rgba(100,100,100,1);
             font-size:18px;
             transition: color 0.4s ease;
         }
        
         .upper:hover {
             color: rgba(100,100,100,1);
         }
        
         .stroke {
             height:5px;
             background: #ff6633;
         }
        
         .lower {
             text-align: center;
             box-sizing:border-box;
             background-color: #333;
             height:60px;
             width:100%;
             padding: 6% 15%;
             color: rgb(200,200,200)
         }
        
         .lower button {
             float:left;
             height:18px;
             line-height:18px;
             display:block;
             color: rgba(255, 255, 255, 0.6);
             width:25%;
             transition: color 0.3s ease;
         }
        
         .lower button:focus {
            border: 0;
            outline: none;
         }
                                                              
         .lower button:last-child {
             margin-left:50%;
         }
        
         .lower button i {
             width:19px;
             height:18px;
             display:block;
             float:left;
         }
        
         .lower button:hover {
             cursor: pointer;
         }
        
         .lower button:hover {
             color: rgba(255,255,255,1);
         }
        
         .lower button:hover .icon-ok {
             color:rgba(100,255,100,0.5);
         }
        
         .lower button:hover .icon-remove {
             color:rgba(255,102,51,0.8);
         }  
              
         .lower span{
             display: none;
             color: #ff6633;
             font-size: 1.3em;
             font-weight: 700;
             position: relative;
             bottom: 10px;
             left: 8px;
         }
                                                              
         .lower i.success-mark{
             font-size: 3em;
             color: #009933;
             position: relative;
             bottom: 18px;
             display: none;
         }
                                                              
         .tr-bg {
            display: none;
            width: 100%;
            height: 100%;
            position: absolute;
            z-index: 10000;
            top: 0;
            left: 0;
            background-color: #000;
            opacity: .15;
            filter: alpha(opacity=10);
         }    
                                                              
         @-webkit-keyframes gear-rotate {
            0% { -webkit-transform: rotate(0deg); }
            100% { -webkit-transform: rotate(180deg); }
         }
         @-moz-keyframes gear-rotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(180deg); }
         }
         @keyframes gear-rotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(180deg); }
         }
        
         .gear-rotate {
            display: none;
            width: 2em;
            height: 2em;
            background: #ff6633;
            position: relative;
            bottom: 5px;
            border-radius: 1em;
            -webkit-animation: 1s gear-rotate steps(10) infinite;
            -moz-animation: 1s gear-rotate steps(10) infinite;
            animation: 1s gear-rotate steps(10) infinite;
         }
         .gear-rotate::before {
            width: 2.8em;
            height: 2.8em;
            background: -webkit-linear-gradient(0deg,transparent 39%,#ff6633 39%,#ff6633 61%, transparent 61%),-webkit-linear-gradient(60deg,transparent 42%,#ff6633 42%,#ff6633 58%, transparent 58%),-webkit-linear-gradient(120deg,transparent 42%,#ff6633 42%,#ff6633 58%, transparent 58%);
            background: -moz-linear-gradient(0deg,transparent 39%,#ff6633 39%,#ff6633 61%, transparent 61%),-moz-linear-gradient(60deg,transparent 42%,#ff6633 42%,#ff6633 58%, transparent 58%),-moz-linear-gradient(120deg,transparent 42%,#ff6633 42%,#ff6633 58%, transparent 58%);
            background: -o-linear-gradient(0deg,transparent 39%,#ff6633 39%,#ff6633 61%, transparent 61%),-o-linear-gradient(60deg,transparent 42%,#ff6633 42%,#ff6633 58%, transparent 58%),-o-linear-gradient(120deg,transparent 42%,#ff6633 42%,#ff6633 58%, transparent 58%);
            background: -ms-linear-gradient(0deg,transparent 39%,#ff6633 39%,#ff6633 61%, transparent 61%),-ms-linear-gradient(60deg,transparent 42%,#ff6633 42%,#ff6633 58%, transparent 58%),-ms-linear-gradient(120deg,transparent 42%,#ff6633 42%,#ff6633 58%, transparent 58%);
            background: linear-gradient(0deg,transparent 39%,#ff6633 39%,#ff6633 61%, transparent 61%),linear-gradient(60deg,transparent 42%,#ff6633 42%,#ff6633 58%, transparent 58%),linear-gradient(120deg,transparent 42%,#ff6633 42%,#ff6633 58%, transparent 58%);
            position: absolute;
            content:"";
            top: -.4em;
            left: -.4em;
            border-radius:1.4em;
         }
         .gear-rotate::after {
            width: 1em;
            height: 1em;
            background: #eee;
            position: absolute;
            content:"";
            top: .5em;
            left: .5em;
            border-radius: .5em;
         }
         /* Confirm Box Style - end - */
                 
         /* Info Popup Style - start - */
         #infoPopup {width: 600px;padding: 18px;left: 28%;top: -1000px;display:block;}
         #infoPopup .upper {padding: 18px;}
         #infoPopup .upper h2{font-size: 16px;color: #333;padding-left: 3px;}
         #infoPopup .upper #description{margin-top: 5px;font-size: 13px;color: #333;padding-left: 3px;}
         #infoPopup table th,td{font-size: 13px;color: #333;}
         #infoPopup table th{padding-right: 20px;}
         #infoPopup .lower {padding: 2% 15%;padding-left: 22px;text-align: left;}
         #infoPopup .upper i {position: absolute;top: 21px;right: 24px;font-size: 13px;cursor: pointer;}
         #infoPopup .upper i:hover {color:rgba(255,102,51,0.8);}
         #infoPopup .lower input{background: #eee;border: 0;outline: 0;padding: 9px 17px;cursor: pointer;margin-top: 1px;}
         /* Info Popup Style - end - */
    </style>
                <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"/>
                <script type="text/javascript" src="https://code.jquery.com/ui/1.11.3/jquery-ui.min.js"/>
                <link href="https://code.jquery.com/ui/1.11.3/themes/smoothness/jquery-ui.css" rel="stylesheet"/>
                 
                <apex:stylesheet value="{!URLFOR($Resource.DHTMLGantt, 'codebase/dhtmlxgantt.css')}"/>
                <apex:includeScript value="{!URLFOR($Resource.DHTMLGantt,'codebase/dhtmlxgantt.js')}"/>
                <apex:includeScript value="{!URLFOR($Resource.DHTMLGantt,'codebase/ext/dhtmlxgantt_tooltip.js')}"/>
        
                         <div id="outerDiv" style="height:100%;">
                             <div id="head" style="height:35px;padding:2px">
                                 <div style="float:right;vertical-align:middle;border:0px solid #b8b8b8; margin:3px; padding:2px 10px;display:inline-block;">
                                     <span class="help" title="Gantt help page (New Window)"><a href="javascript:openPopupFocusEscapePounds('/apex/Gantthelppage', 'Help', 1024, 768, 'width=1024,height=768,resizable=yes,toolbar=yes,status=yes,scrollbars=yes,menubar=yes,directories=no,location=yes,dependant=no', false, false);" class="linkCol"><span class="linkSpan">{!$label.Help_Help_page}&nbsp;</span><img src="/s.gif" alt="Gantt help page (New Window)" class="helpIcon" title="Gantt help page (New Window)" /></a></span>
                                 </div>
                                 <div style="float:right;vertical-align:top;border:0px solid #b8b8b8; margin:0px;margin-right:5px; padding:0px;display:inline-block; ">
                                     <span value="" title="{!$Label.att_Download}" class="downloadIcon" style="display:inline-block;" onclick='$("#downloadIconsBlock").slideToggle("fast");'></span>
                                </div>
                                <div id="downloadIconsBlock" style="position: absolute;right: 4px;top: 46px;z-index: 1000;background: #ededed;border: 1px solid #b8b8b8;padding: 5px 10px;display: none;">
                                    <span value="" title="{!$Label.btn_Export_to_PDF}" class="downloadOptions" id="PDF" style="display:inline-block;" onclick='pdfExport()'></span> 
                                    <span value="" title="{!$Label.gantt_Export_Excel}" class="downloadOptions" id="xlsx" style="display:inline-block;" onclick='xlsxExport()'></span>
                                    <span value="" title="{!$Label.gantt_Export_PNG}" class="downloadOptions" id="png" style="display:inline-block;" onclick='pngExport()'></span>
                                </div> 
                                 <div id="zooming" style="float:right;vertical-align:middle;border:0px solid #b8b8b8; margin:3px; padding:2px 10px 5px 5px;display:inline-block;">
                                         <span style="font-weight:bold;">{!$label.gnt_Zooming} </span>
                                         <input type="radio" id="day" name="timeSlot" />{!$label.gnt_Days}&nbsp;
                                         <input type="radio" id="week" name="timeSlot" checked="checked" />{!$label.gnt_Weeks}&nbsp;
                                  </div>
                                  <div style="float: right; vertical-align: middle;margin-top:5px; padding:1px 10px 2px 0px;">
                                        <span style="font-weight:bold;">{!$label.gnt_Period}</span>
                                        <input type='text' id='startDate' style="width:80px;font-size: 12px;"/>
                                        <input type='text' id='endDate' style="width:80px;font-size: 12px;"/>                                        
                                  </div>     
                                  <div style="float:left;vertical-align:top;border:0px solid #b8b8b8; margin:0px;margin-right:15px; padding:0px;display:inline-block;z-index:99;">
                                        <apex:form id="frmFilter" > 
                                            <apex:inputHidden id="hdnstartDate" value="{!startDateVal}"/>
                                            <apex:inputHidden id="hdnendDate" value="{!endDateVal}"/>
                                            <apex:inputHidden id="hdnZomming" value="{!zoomingVal}"/>                                                                                    
                                        </apex:form> 
                                     </div>
                                    <div style="position:absolute ; top:11px;left:335px;float:left;vertical-align:top; margin:0px; padding:0px;display:inline-block;z-index:100; ">
                                        <apex:form >
                                            <div style="display:inline-block;margin-top:7px;">
                                                <span style="font-weight:bold;">{!$Label.gnt_filter}</span>                                          
                                                <apex:selectList id="paFilterDetail" value="{!selectedFilter}" size="1" multiselect="false">
                                                    <apex:selectOptions value="{!FilterList}"/>
                                                        <apex:actionSupport event="onchange" action="{!loadganttviewbyFilter}"/>
                                                </apex:selectList>                                                   
                                                <apex:commandLink action="{!showPopup}" onclick="setplantypeSelected(this)" style="padding-left:5px;color:#1797c0;" value="{!lnkfilterTitle}" rerender="filterpopup"/>                                                                                                                                                                                   
                                            </div>            
                                         </apex:form>
                                     </div>
                                     <div>
                                         <apex:form id="frmNewFilter">
                                             <apex:outputPanel id="filterpopup">                    
                                                 <apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!displayPopUp}"/>
                                                     <apex:outputPanel styleClass="custPopup" layout="block" rendered="{!displayPopUp}">   
                                                         <apex:pageBlock title="{!$Label.btn_filter_settings}" mode="Edit">
                                                             <apex:pageBlockButtons location="top">                                                                     
                                                                  <apex:commandButton styleClass="btn btn" value="{!$Label.btn_save}" action="{!SaveFilter}"  disabled="{!isGlobaluser}" />
                                                                  <apex:commandButton styleClass="btn btn" value="{!$Label.btn_Delete}" action="{!DeleteFilter}" disabled="{!isGlobaluser}" />
                                                                  <apex:commandButton styleClass="btn btn" value="{!$Label.btn_cancel}" action="{!closePopup}" immediate="true" html-formnovalidate="true" />
                                                             </apex:pageBlockButtons>
                                                             <apex:pageBlockSection columns="1" >
                                                                  <apex:pageBlockSectionItem >
                                                                        <apex:outputlabel value="{!$Label.Filtername}"/>
                                                                            <apex:outputPanel styleClass="requiredInput" layout="block" > 
                                                                            <apex:outputPanel styleClass="requiredBlock"/>
                                                                        <apex:inputText value="{!FilterName}" required="True" disabled="{!isGlobaluser}" maxlength="20"/>
                                                                            </apex:outputPanel>
                                                                  </apex:pageBlockSectionItem>
                                                                  <apex:pageBlockSectionItem >
                                                                    <apex:outputlabel value="{!$Label.sub_Project_type}"/>                                                                                                                                                   
                                                                   <apex:selectCheckboxes id="filterpatype" disabled="{!isGlobaluser}" value="{!selectedFilterProjectTypes}" layout="pageDirection"  borderVisible="true">
                                                                            <apex:selectOptions value="{!PROJECTList}" />
                                                                       </apex:selectCheckboxes>                                                                                                                                           
                                                                  </apex:pageBlockSectionItem>
                                                                <apex:pageBlockSectionItem >
                                                                  <apex:outputlabel value="{!$Label.gnt_Zooming}" />                                                              
                                                                  <apex:selectRadio id="srfilterzooming" value="{!FilterZooming}" disabled="{!isGlobaluser}" required="True">
                                                                    <apex:selectOption itemLabel="{!$Label.gnt_Days}" itemValue="Days"/>
                                                                    <apex:selectOption itemLabel="{!$Label.gnt_Weeks}"  itemValue="Weeks"/>                                                                    
                                                                  </apex:selectRadio> 
                                                                </apex:pageBlockSectionItem>
                                                                 <apex:pageBlockSectionItem >
                                                                    <apex:outputlabel value="{!$Label.pt_Start_date}"/ >    
                                                                        <apex:outputPanel styleClass="requiredInput" layout="block" > 
                                                                            <apex:outputPanel styleClass="requiredBlock"/>
                                                                                <apex:input type="date" value="{!FilterStartDate}" disabled="{!isGlobaluser}" id="filterstartDate" onchange="validatefilterPeriod(this)" required="True"/>
                                                                            </apex:outputPanel>
                                                                  </apex:pageBlockSectionItem>
                                                                   <apex:pageBlockSectionItem >
                                                                    <apex:outputlabel value="{!$Label.pt_End_date}"/ >
                                                                        <apex:outputPanel styleClass="requiredInput" layout="block" > 
                                                                            <apex:outputPanel styleClass="requiredBlock"/>
                                                                        <apex:input type="date" value="{!FilterEndDate}" disabled="{!isGlobaluser}" id="filterendDate" onchange="validatefilterPeriod(this)" required="True" />
                                                                            </apex:outputPanel>
                                                                  </apex:pageBlockSectionItem>
                                                                          <apex:pageBlockSectionItem > 
                                                                          <apex:outputlabel value="{!$Label.gnt_My_default}"/ >                                                     
                                                                      <apex:inputCheckbox value="{!mydefaultFilter}" disabled="{!isGlobaluser}" />
                                                        </apex:pageBlockSectionItem>
                                                                     <apex:pageBlockSectionItem rendered="{!Level1}" > 
                                                                          <apex:outputlabel value="{!$Label.gnt_Global}"/ >                                                     
                                                                      <apex:inputCheckbox value="{!GlobalFilter}" disabled="{!isGlobaluser}" />
                                                        </apex:pageBlockSectionItem>
                                                             
                                                             </apex:pageBlockSection>    
                                                          </apex:pageBlock>         
                                              </apex:outputPanel>
                                       </apex:outputPanel>
                                     </apex:form>
                                   </div>                                                                                                                      
                                 </div>

                                    
                                 <div style="position:absolute ; top:13px;left:10px;   float:left;vertical-align:top;border:0px solid #b8b8b8; margin:0px;margin-right:15px; padding:0px;display:inline-block; ">
                                        <apex:form >
                                          <apex:commandButton value="{!$Label.btn_back}" style="display:inline-block;" styleClass="topButton"  action="{!gotoGanttPage}"/>  
                                          <div style="display:inline-block;vertical-align:sub;  margin:0px; padding-left:8px; ">
                                              <span style="font-size: 1.3em" class="pbTitle mainTitle"><b>{!projectName}</b></span>
                                          </div>
                                      </apex:form>
                                 </div>        
                                <div class="expButtonC" style="position:absolute ;top:55px;left:14px;padding:0px 2px;display:inline-block;z-index:99;">
                                     <img src="/resource/1450712230000/musqot__Expand_up" title="{!$Label.btn_Expand_all}"  class="expButton" id="ganttTreeCollapser" onclick='toggleExpand(this);'/>
                                </div>
                                <div onclick="toggleGridSection()" style="background:#fff;position:absolute;top:50px;left:235px;padding: 6px 3px 0px;display:inline-block;z-index:99;cursor:pointer;">
                                     <img class="ganttGridCollapser" src="/resource/1450701262000/musqot__collaps_left" />
                                </div>
                                                 
         <script>
             gantt._render_grid_item = function (item) {
                if (!gantt._is_grid_visible())
                    return null;
            
                var columns = this.getGridColumns();
                var cells = [];
                var width = 0;
                for (var i = 0; i < columns.length; i++) {
                    var last = i == columns.length - 1;
                    var col = columns[i];
                    var cell;
            
                    var value;
                    var itemType = item.objType;
                    var menuItems = '';
                    if(itemType == 'subproject'){
                        var menuItems = "<a href='/apex/SubprojectPerformance?subid=" + item.id + "&ganttid=" + location.search.replace("?id=",'') + "' title='{!$Label.musadmin_Performance}'>&nbsp;{!$Label.musadmin_Performance}</a> \
                                    <a href='/apex/SubProject?id=" + item.id + "&sfdc.override=1' title='{!$Label.btn_status_open}'>&nbsp;{!$Label.btn_status_open}</a> \
                                    <a href='javascript:showInfoPopup(&apos;" + item.id + "&apos;);' title='{!$Label.clm_Info}'>&nbsp;{!$Label.clm_Info}</a>";
                    }else if(itemType == 'activity'){
                        var menuItems = "<a href='/apex/Marketingactivity?id=" + item.id + "&sfdc.override=1' title='{!$Label.btn_status_open}'>&nbsp;{!$Label.btn_status_open}</a> \
                                    <a href='javascript:showInfoPopup(&apos;" + item.id + "&apos;);' title='{!$Label.clm_Info}'>&nbsp;{!$Label.clm_Info}</a>";
                    }else if(itemType == 'task'){
                        var openLink = baseUrl;
						var ganttdetailid = GetQueryStringByParameter('id');
                        var gantttaskurl = 'apex/TaskEditpage?taskid=' + item.id + '&ganttid=' + ganttdetailid;
                        openLink += gantttaskurl;
                        var menuItems = "<a href='" + openLink + "' title='{!$Label.btn_status_open}'>&nbsp;{!$Label.btn_status_open}</a> \
                                    <a href='javascript:showInfoPopup(&apos;" + item.id + "&apos;);' title='{!$Label.clm_Info}'>&nbsp;{!$Label.clm_Info}</a>";
                    }
                  	
                    var	gantt_View = "<div class='gantt_tree_content gantt_contextmenu'><img id='gantt_contextmenu_" + item.id + "' src='/resource/1433937565000/musqot__context_menu_icon' oncontextmenu='ganttcontextmenu(this,\""+item.objType+"\"); return false;' height='24' width='24' border='0'></div>";
                    var ganttMenu = "<div item_id ='" + item.id + "' class='ganttmenuButton ganttmenuButtonRounded ganttmenuButtonActivated' id='ganttNav' title='' style='display: none;position: absolute;z-index: 100;'> \
                                    	<div class='ganttmenuButtonMenu ganttmenuWidthExtended' id='ganttNavMenu' style='display: block; position: absolute;'> \
                                    		<div>"+menuItems+"</div> \
                                    	</div> \
                                    </div>";	
                    
                    if (col.name == "add") {
                        value = "<div class='gantt_add'></div>";
                    } else {
                        if (col.template)
                            value = col.template(item);
                        else
                            value = item[col.name];
            
                        if (value instanceof Date)
                            value = this.templates.date_grid(value, item);
                        value = "<div class='gantt_tree_content'>" + value + "</div>";
                    }
                    var css = "gantt_cell" + (last ? " gantt_last_cell" : "");
            
                    var tree = "";
                    if (col.tree) {
                        for (var j = 0; j < item.$level; j++)
                            tree += this.templates.grid_indent(item);
            
                        var has_child = this._has_children(item.id);
                        if (has_child) {				
                            tree += this.templates.grid_open(item);
                            if(itemType == 'subproject'){
                                tree += this.templates.grid_project(item);
                            }else if(itemType == 'activity'){
                                tree += this.templates.grid_marketingact(item);
                            }else if(itemType == 'task'){
                                tree += this.templates.grid_task(item);
                            }
                            //tree += this.templates.grid_folder(item);
                        } else {
                            tree += this.templates.grid_blank(item);
                            if(itemType == 'subproject'){
                                tree += this.templates.grid_project(item);
                            }else if(itemType == 'activity'){
                                tree += this.templates.grid_marketingact(item);
                            }else if(itemType == 'task'){
                                tree += this.templates.grid_task(item);
                            }
                            //tree += this.templates.grid_file(item);
                        }
                    }
                    var style = "width:" + (col.width - (last ? 1 : 0)) + "px;";
                    if (gantt.defined(col.align))
                        style += "text-align:" + col.align + ";";
                    cell = "<div class='" + css + "' style='" + style + "'>" + tree + value +  (last ? gantt_View + ganttMenu : "") + "</div>";
                    cells.push(cell);
                }
                var css = item.$index % 2 === 0 ? "" : " odd";
                css += (item.$transparent) ? " gantt_transparent" : "";
            
                css += (item.$dataprocessor_class ? " " + item.$dataprocessor_class : "");
            
                if (this.templates.grid_row_class) {
                    var css_template = this.templates.grid_row_class.call(this, item.start_date, item.end_date, item);
                    if (css_template)
                        css += " " + css_template;
                }
            
                if (this.getState().selected_task == item.id) {
                    css += " gantt_selected";
                }
                var el = document.createElement("div");
                el.className = "gantt_row" + css;
                el.style.height = this.config.row_height + "px";
                el.style.lineHeight = (gantt.config.row_height) + "px";
                el.setAttribute(this.config.task_attribute, item.id);
                el.innerHTML = cells.join("");
                return el;
            };
            gantt._init_templates = function(){
                var labels = gantt.locale.labels;
                labels.gantt_save_btn 	= labels.icon_save;
                labels.gantt_cancel_btn 	= labels.icon_cancel;
                labels.gantt_delete_btn 	= labels.icon_delete;
            
                //build configuration based templates
                var d = this.date.date_to_str;
                var c = this.config;
                gantt._init_template("date_scale", true);
                gantt._init_template("date_grid", true, "grid_date_format");
                gantt._init_template("task_date", true);
            
                gantt.mixin(this.templates,{
                    xml_date:this.date.str_to_date(c.xml_date,c.server_utc),
                    xml_format:d(c.xml_date,c.server_utc),
                    api_date:this.date.str_to_date(c.api_date),
                    progress_text:function(start, end, task){return "";},
                    grid_header_class : function(column, config){
                        return "";
                    },
            
                    task_text:function(start, end, task){
                        return task.text;
                    },
                    task_class:function(start, end, task){return "";},
                    grid_row_class:function(start, end, task){
                        return "";
                    },
                    task_row_class:function(start, end, task){
                        return "";
                    },
                    task_cell_class:function(item, date){return "";},
                    scale_cell_class:function(date){return "";},
                    scale_row_class:function(date){return "";},
            
                    grid_indent:function(item) {
                        return "<div class='gantt_tree_indent'></div>";
                    },
                    grid_folder:function(item) {
                        return "<div class='gantt_tree_icon gantt_folder_" + (item.$open ? "open" : "closed") + "'></div>";
                    },
                    grid_file:function(item) {
                        return "<div class='gantt_tree_icon gantt_file'></div>";
                    },
                    grid_open:function(item) {
                        return "<div class='gantt_tree_icon gantt_" + (item.$open ? "close" : "open") + "'></div>";
                    },
                    grid_blank:function(item) {
                        return "<div class='gantt_tree_icon gantt_blank'></div>";
                    },
                    grid_task:function(item) {
                        return "<div class='gantt_tree_icon gantt_Task'></div>";
                    },
                    grid_marketingact:function(item) {
                        return "<div class='gantt_tree_icon gantt_Marketingact'></div>";
                    },
                    grid_project:function(item) {
                        return "<div class='gantt_tree_icon gantt_Project'></div>";
                    },
                    grid_plan:function(item) {
                        return "<div class='gantt_tree_icon gantt_Plan'></div>";
                    },
                    date_grid: function(date, item) {
                        if(item && gantt.isUnscheduledTask(item) && gantt.config.show_unscheduled){
                            return gantt.templates.task_unscheduled_time(item);
                        }else{
                            return gantt.templates.grid_date_format(date);
                        }
                    },
            
                    task_time:function(start,end,ev){
                        if(gantt.isUnscheduledTask(ev) && gantt.config.show_unscheduled){
                            return gantt.templates.task_unscheduled_time(ev);
                        }else{
                            return gantt.templates.task_date(start)+" - "+gantt.templates.task_date(end);
                        }
                    },
            
                    task_unscheduled_time: function(task){
                        return "";
                    },
            
                    time_picker:d(c.time_picker),
                    link_class : function(link){
                        return "";
                    },
                    link_description : function(link){
                        var from = gantt.getTask(link.source),
                            to = gantt.getTask(link.target);
            
                        return "<b>" + from.text + "</b> &ndash;  <b>" + to.text+"</b>";
                    },
            
                    drag_link : function(from, from_start, to, to_start) {
                        from = gantt.getTask(from);
                        var labels = gantt.locale.labels;
            
                        var text = "<b>" + from.text + "</b> " + (from_start ? labels.link_start : labels.link_end)+"<br/>";
                        if(to){
                            to = gantt.getTask(to);
                            text += "<b> " + to.text + "</b> "+ (to_start ? labels.link_start : labels.link_end)+"<br/>";
                        }
                        return text;
                    },
                    drag_link_class: function(from, from_start, to, to_start) {
                        var add = "";
            
                        if(from && to){
                            var allowed = gantt.isLinkAllowed(from, to, from_start, to_start);
                            add = " " + (allowed ? "gantt_link_allow" : "gantt_link_deny");
                        }
            
                        return "gantt_link_tooltip" + add;
                    }
                });
            
                this.callEvent("onTemplatesReady",[]);
            };
            
            function toggleGridSection() {
                if(gantt.config.show_grid) {
                    $('.ganttGridCollapser').attr('src','/resource/1450701236000/musqot__collaps_right').parent().css({
                        'left':'10.5px',
                        'top':'49.5px'
                    });
                    $('.expButtonC').hide();
                } else {
                    $('.ganttGridCollapser').attr('src','/resource/1450701262000/musqot__collaps_left').parent().css({
                        'left':'235px',
                        'top':'50px'
                    });
                    $('.expButtonC').show();
                }
                gantt.config.show_grid = !gantt.config.show_grid;
                gantt.init('gantt');
            }
             
             var bodyheight = bodyheight = $(window).height();
             var bodywidth = bodywidth = $(window).width();
             $(".bodyDiv").height(bodyheight-140);  //
             $(".bodyDiv").width(bodywidth-44);//
             $("#outerDiv").height($(".bodyDiv").height()); 
             $("#outerDiv").width($(".bodyDiv").width()-20);
             $("#gantt").height($("#outerDiv").height()-50);    //
             $("#gantt").width($("#outerDiv").width()-20);
             //  $("#gantt").margin(0);
             
             $(document).ready(function(){
                 gantt.templates.tooltip_text = function(start,end,task){
                    var itemType = task.objType;
                    var typeLabel = '';
                    if(itemType == 'subproject')
                        typeLabel = '{!$label.sub_Project_type}';
                    else if(itemType == 'activity')
                        typeLabel = '{!$Label.mrk_Activity_type}';
                    else if(itemType == 'task')
                        typeLabel = '{!$Label.tsk_Subject}';
                    
                    var formattedSd = ("0" + (start.getMonth()+1)).slice(-2) + '-' + ("0" + (start.getDate())).slice(-2) + '-' + start.getFullYear();
                	var formattedEd = ("0" + (end.getMonth()+1)).slice(-2) + '-' + ("0" + (end.getDate()-1)).slice(-2) + '-' + end.getFullYear();
                    var toolTipText = task.text + "<br/><b>"+typeLabel+":</b> " + task.projectType + "<br/><b>{!$label.pt_Start_date}:</b> " + formattedSd + "<br/><b>{!$label.pt_End_date}:</b> " + formattedEd;
                    if(itemType == 'task')
                        toolTipText = task.text + "<br/><b>"+typeLabel+":</b> " + task.projectType + "<br/><b>{!$label.tsk_Due_Date}:</b> " + formattedSd;
                    return toolTipText;
                };
                 $(window).resize(function(){
                     var bodyheight = bodyheight = $(window).height();
                     var bodywidth = bodywidth = $(window).width();
                  //    var ganttmargin = ganttmargin = 0;
                     $(".bodyDiv").height(bodyheight-140);  //
                     $(".bodyDiv").width(bodywidth-44);//
                     $("#outerDiv").height($(".bodyDiv").height()); 
                     $("#outerDiv").width($(".bodyDiv").width());
                     $("#gantt").height($("#outerDiv").height()-50);    //
                     $("#gantt").width($("#outerDiv").width()-20);
                  //   $("#gantt").margin(ganttmargin+0);
                     gantt.init("gantt"); 
                 });
             });
             </script>
    
    
    <script>
    
    //adding aditional custom functions to Date object
    Date.prototype.getWeek = function() {
        var onejan = new Date(this.getFullYear(),0,1);
        return Math.ceil((((this - onejan) / 86400000) + onejan.getDay()+1)/7);
    }
    Date.prototype.getWeekendDate = function() {
        var endDate = this;
        return endDate.setDate(this.getDate()+(6-this.getDay()));
    }
    Date.prototype.getWeekStartDate = function() {
        var startDate = this;
        return startDate.setDate(this.getDate()-this.getDay());
    }
    Date.prototype.getMonthStartDate = function() {
        return (new Date(this.getFullYear(), this.getMonth(),1));
    }
    Date.prototype.getMonthendDate = function() {
        return (new Date(this.getFullYear(), this.getMonth()+1, 0));
    }
    
    
    var timeOptions = document.getElementsByName('timeSlot');
    var today = new Date();
    var startDate = new Date();
    var endDate = new Date();
    startDate.setDate(today.getDate()-30);
    startDate = startDate.getMonthStartDate();
    endDate.setDate(today.getDate()+60);
    //endDate = today.getMonthendDate();
    endDate = endDate.getMonthendDate();
    document.getElementById('startDate').value = (("0" + (startDate.getMonth()+1)).slice(-2))+'/'+(("0" + startDate.getDate()).slice(-2))+'/'+startDate.getFullYear();
   	document.getElementById('endDate').value = (("0" + (endDate .getMonth() + 1)).slice(-2))+'/'+(("0" + endDate .getDate()).slice(-2))+'/'+endDate .getFullYear();
    //Filter Start
    if(document.getElementById('pg:frmFilter:hdnstartDate').value != '' && document.getElementById('pg:frmFilter:hdnendDate').value != '' && document.getElementById('pg:frmFilter:hdnZomming').value != ''){
        var fstartDate = new Date(Date.parse(document.getElementById('pg:frmFilter:hdnstartDate').value))
        document.getElementById('startDate').value = (("0" + (fstartDate.getMonth()+1)).slice(-2))+'/'+(("0" + fstartDate.getDate()).slice(-2))+'/'+fstartDate.getFullYear();
        var fendDate = new Date(Date.parse(document.getElementById('pg:frmFilter:hdnendDate').value))
        document.getElementById('endDate').value = (("0" + (fendDate.getMonth()+1)).slice(-2))+'/'+(("0" + fendDate.getDate()).slice(-2))+'/'+fendDate.getFullYear();
        if(document.getElementById('pg:frmFilter:hdnZomming').value == 'Weeks'){
            document.getElementById('week').checked  = true;
        }else if(document.getElementById('pg:frmFilter:hdnZomming').value == 'Days'){
            document.getElementById('day').checked  = true;
        }else if(document.getElementById('pg:frmFilter:hdnZomming').value == 'Months'){
            document.getElementById('month').checked  = true;
        }
        startDate = fstartDate;
        endDate = fendDate;
        
    }        
    
    function setplantypeSelected(obj){
        if(obj.text == "Add"){
            setTimeout(
            function() {
                var dd = document.getElementById("pg:frmNewFilter:j_id16:j_id46:j_id52:filterpatype").children[0].children;
                for (var i = 0; i < dd.length; i++) 
                {
                    dd[i].children[0].children[0].checked = true;
                }
                document.getElementById("pg:frmNewFilter:j_id16:j_id21:j_id30:srfilterzooming:1").checked="true"
            }, 1000);
        }
    }
    function validatefilterPeriod(obj){
        if(document.getElementById("pg:frmNewFilter:j_id16:j_id21:j_id38:filterendDate").value > document.getElementById("pg:frmNewFilter:j_id16:j_id21:j_id34:filterstartDate").value){
            document.getElementById("pg:frmNewFilter:j_id16:j_id21:j_id34:filterstartDate").className = "";       
            document.getElementById("pg:frmNewFilter:j_id16:j_id21:j_id38:filterendDate").className = "";             
        }else{
            document.getElementById("pg:frmNewFilter:j_id16:j_id21:j_id38:filterendDate").className = "redFont";
        }
    }  
    //Filter End
    //endDate.setDate(endDate.getDate()+1);
    
    //Gantt Menu start
         function ganttcontextmenu(obj, itemType){
          var contextMenu = obj.parentNode.nextSibling;
          var anchors = contextMenu.getElementsByTagName("a");
             
          $(".ganttmenuButton ").hide();
          
          // check if Performance menu should be visible or not.
          var id = obj.id.split("_")[2];
          var objectType = "";
          if(itemType == 'project') {
              // no plan on detail gantt
              contextMenu.style.display = 'block';
              return;
          } else if(itemType == 'subproject') {
              sforce.connection.sessionId = "{!$Api.Session_ID}";
              var result = sforce.connection.query("SELECT Id,musqot__CRM__c,musqot__ERP__c,musqot__Social_media__c from musqot__Subproject__c where id='"+ id +"'", {
                  onSuccess : function(result) {
                      records = result.getArray("records");
                      var dataObj = records[0];
                      if(dataObj.musqot__CRM__c==null && dataObj.musqot__ERP__c==null && dataObj.musqot__Social_media__c==null) {
                          anchors[0].style.display = 'none';
                      }
                      contextMenu.style.display = 'block';
                  },
                  onFailure : function(error) {
                      console.log("An error has occurred " + error);
                  }
              });
          } else if(itemType == 'activity') {
              contextMenu.style.display = 'block';
              return;
          } else if(itemType == 'task') {
              contextMenu.style.display = 'block';
              return;
          }
     }
    
    //Gantt Menu End
    
    /*document.getElementById('startDate').onchange  = function(){
        var vals = document.getElementById('startDate').value.split('-');
        var endDateStr = document.getElementById('endDate').value;
        endDateStr = endDateStr.split('-');
        var endDate = new Date(endDateStr[0],parseInt(endDateStr[1])-1,endDateStr[2]);
        document.getElementById('startDate').value = vals[0]+'-'+vals[1]+'-01';
        var startDate = new Date(vals[0],parseInt(vals[1])-1,01);
        if(endDate>startDate){
            $("#startDate").removeClass("redFont");   
            $("#endDate").removeClass("redFont");           
            gantt.config.start_date = startDate;
            gantt.config.end_date  = endDate;
            gantt.init("gantt");
            drawChart();
        }else{
            $("#startDate").addClass("redFont");
        }
        
    }
    
    document.getElementById('endDate').onchange  = function(){
        var vals = document.getElementById('endDate').value.split('-');
        var startDateStr = document.getElementById('startDate').value;
        startDateStr = startDateStr.split('-');
        var startDate = new Date(startDateStr[0],parseInt(startDateStr[1])-1,startDateStr[2]);
        //var endDate = (new Date(vals[0],parseInt(vals[1])-1,vals[2])).getMonthendDate();
        var endDate = (new Date(vals[0],parseInt(vals[1])-1,vals[2]));
        document.getElementById('endDate').value = endDate.getFullYear()+'-'+(("0" + (endDate.getMonth() + 1)).slice(-2))+'-'+(("0" + endDate.getDate()).slice(-2));
        endDate = new Date(endDate.setDate(endDate.getDate()+1));
        if(endDate>startDate){
            $("#startDate").removeClass("redFont");       
            $("#endDate").removeClass("redFont");  
            gantt.config.start_date = startDate;
            gantt.config.end_date  = endDate;
            gantt.init("gantt");
            drawChart();
        }else{
            $("#endDate").addClass("redFont");
        }
    }*/
    
    //set subscale while refreshing
    for(var i=0;i<timeOptions.length;i++){
        
        if(timeOptions[i].checked == true){
            
            if(timeOptions[i].id == "week"){
                gantt.config.scale_unit="month";
                gantt.config.date_scale="%F";
                gantt.config.subscales = [{ unit: "week", step: 1, date: "%W" }];
            }else if(timeOptions[i].id == "day"){
                gantt.config.scale_unit="month";
                gantt.config.date_scale="%F";
                gantt.config.subscales = [{ unit: "day", step: 1, date: "%d" }];
            }else if(timeOptions[i].id == "month"){
                gantt.config.scale_unit="year";
                gantt.config.date_scale="%Y";
                gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];
            }else{
                gantt.config.scale_unit="year";
                gantt.config.date_scale="Year %y";
                gantt.config.subscales = [];
            }
        }
    }
    
    for(i=0;i<timeOptions.length;i++){
        timeOptions[i].onclick=function(){
            if(this.id == "week"){
                gantt.config.scale_unit="month";
                gantt.config.date_scale="%F";
                gantt.config.subscales = [{ unit: "week", step: 1, date: "%W" }];
            }else if(this.id == "day"){
                gantt.config.scale_unit="month";
                gantt.config.date_scale="%F";
                gantt.config.subscales = [{ unit: "day", step: 1, date: "%d" }];
            }else if(this.id == "month"){
                gantt.config.scale_unit="year";
                gantt.config.date_scale="%Y";
                gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];
            }else{
                gantt.config.scale_unit="year";
                gantt.config.date_scale="Year %y";
                gantt.config.subscales = [];
            }        
            gantt.init("gantt"); 
        };
    }
    
    // PDF export -- start --
            function pdfExport(){
                var pdfStyle = '<style>'+'{!JSENCODE(taskstyleString)}'+'{!JSENCODE(styleString)}'+'{!JSENCODE(dataString)}'+'</style>';
                gantt.exportToPDF({
                    name: "Gantt_page.pdf",
                    locale: "en",
                    header: pdfStyle
                });        
            }  
            // PDF export -- end --
    
    		// Excel export -- start --
            function xlsxExport(){
                var xlsxStyle = '<style>'+'{!JSENCODE(dataString)}'+'</style>';
                gantt.exportToExcel({
                    name: "Gantt_page.xlsx",
                    locale: "en",
                    header: xlsxStyle
                });        
            }  
            // Excel export -- end --
    
    		// PNG export -- start --
            function pngExport(){
                var pngStyle = '<style>'+'{!JSENCODE(taskstyleString)}'+'{!JSENCODE(styleString)}'+'{!JSENCODE(dataString)}'+'</style>';
                gantt.exportToPNG({
                    name: "Gantt_page.png",
                    locale: "en",
                    header: pngStyle
                });        
            }  
            // PNG export -- end --
    
    		function toggleExpand(el){
                if(el.title == '{!$Label.btn_Expand_all}'){
                    gantt.eachTask(function(task){
                        task.$open = true;
                    });
                    gantt.render();
                    el.title = '{!$Label.btn_Collapse_all}';
                    el.src = '/resource/1450712262000/musqot__Expand_down';
                }
                else{
                    gantt.eachTask(function(task){
                        task.$open = false;
                    });
                    gantt.render();
                    el.title = '{!$Label.btn_Expand_all}';
                    el.src = '/resource/1450712230000/musqot__Expand_up';
                }
            }
    </script>
    
    
    
    <div id="gantt" style="margin:auto; height:92%;  overflow-y:hidden;">
        
        <script type="text/javascript">
        // Just the base URL
        var baseUrl = location.protocol + '//' + location.host +'/';    
        var userProfile = "userprofile";
        
        <apex:outputText value="{!jsString}" escape="true"/>   
            
            
            // Test: The lightbox config
            gantt.config.lightbox.sections=[
            {name:"description", height:100, type:"template", map_to:"description"},       
            {name:"time", height:20, type:"time", map_to:"auto"}
        ];
        
           
        
        
        // Test: Lightbox labeling
        gantt.locale.labels.section_progress = "Current progress";  
        gantt.locale.labels.template_description = "Description";  
        
        
        // Test: Lightbox button config
        gantt.config.buttons_right = ["view_btn"];
        
        
        
        if('{!$Profile.Name}' == 'System Administrator' || '{!$Profile.Name}' == "Musqot admin"){
            gantt.config.buttons_left = ["dhx_save_btn","dhx_cancel_btn"];
        }
        else{
            gantt.config.buttons_left = ["dhx_cancel_btn"];
        }  
        
        
        // Test: Custom lightbox templates
        gantt.attachEvent("onBeforeLightbox", function(id) {
            var task = gantt.getTask(id);
            desc = (!task.description) ? "No description given" : task.description;
            task.template_description = "<span class='popup-description'>" + desc + "</span>";
            return true;
        });
        
        // Test: Lightbox button labeling
        gantt.locale.labels["view_btn"] = "View";
        gantt.locale.labels["dhx_cancel_btn"] = "Close";
        
        // Custom button behaviour
        gantt.attachEvent("onLightboxButton", function(button_id, node, e){
            // Navigates user to specific item
            if(button_id == "view_btn"){
                var id = gantt.getState().lightbox;
                var task = gantt.getTask(id);
                if(task.objType == 'task'){
                    var ganttdetailid = GetQueryStringByParameter('id');
                    var gantttaskurl = 'apex/TaskEditpage?taskid=' + id + '&ganttid=' + ganttdetailid;
                    top.location.href = baseUrl + gantttaskurl;
                }
                else{
                    top.location.href = baseUrl + id;
                }
            }
            
        });
        
        //gantt columns
        gantt.config.columns=[
            {name:"text", label:"{!$Label.gnt_Pro_hierarchy}",  tree:true, width:'230px' },
            {name:"status", label:"{!$Label.tsk_Status}", width:'25px', template:function(task){
                return task.img } }                                                            
        ];
        
        //to set the task text
        gantt.templates.task_text=function(start, end, task){ 
            if(task.objType == 'activity'){
                return '<span id="mrkt_activity">'+task.text+"</span>"+task.actImg;
            } 
            if(task.objType == 'task'){
                return '<span id="task">'+task.text+"</span>"+task.actImg;
            }
            return task.text;
        };
        
        function toDateTime(time){ //to yyyy-mm-ddThh:mm:ss format
            var month = time.getMonth()+1;
            var date = time.getDate();
            
            month =month < 10 ? '0'+month : month;
            date = date < 10 ? '0'+date : date;
            
            return time.getFullYear()+'-'+month+'-'+date+'T00:00:00';
        }
        
        
        // lightbox save event
        gantt.attachEvent("onLightboxSave", function(button_id, node, e){
            gantt.updateTask(button_id);
            var recId = gantt.getState().lightbox;      
            sforce.connection.sessionId = "{!$Api.Session_ID}"; 
            var a;
            var myJ=gantt.getLightboxValues();
            if(gantt.getTask(button_id).objType == 'project')
                a = new sforce.SObject("musqot__Project__c");
            if(gantt.getTask(button_id).objType == 'subproject')
                a = new sforce.SObject("musqot__Subproject__c");
            if(gantt.getTask(button_id).objType == 'activity'){
                a = new sforce.SObject("musqot__Marketing_activity__c");
                a.Id = recId; 

                //converting date to datetime format
                st_time = toDateTime(myJ.start_date);
                end_time = toDateTime(myJ.end_date);
                
                a.musqot__Starts_date__c = st_time;  
                a.musqot__Ends_date__c = end_time;
                a.musqot__Description__c = myJ.description;                   
                sforce.connection.update([a]);
                
            } else{                       
                a.Id = recId;  
                a.musqot__Starts_date__c = myJ.start_date;  
                a.musqot__Ends_date__c = myJ.end_date;
                a.musqot__Description__c = myJ.description;                   
                sforce.connection.update([a]);
            }
            gantt.getTask(button_id).start_date = myJ.start_date;
            gantt.getTask(button_id).end_date = myJ.end_date;
            gantt.getTask(button_id).description = myJ.description;                   
            gantt.updateTask(button_id);       
            gantt.hideLightbox();
            gantt.init("gantt");
        });
        
        function GetQueryStringByParameter(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
            return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
        // Navigation event
        gantt.attachEvent("onTaskDblClick", function(id,e){
            var task = gantt.getTask(id);
            if(task.objType == 'task'){
                var ganttdetailid = GetQueryStringByParameter('id');
                var gantttaskurl = 'apex/TaskEditpage?taskid=' + id + '&ganttid=' + ganttdetailid;
                top.location.href = baseUrl + gantttaskurl;
            }
            else{
                top.location.href = baseUrl + id;
            }
        });
        
        
        // on task click open contextmenu, and select the row.
        gantt.attachEvent("onTaskClick", function(id,e){
            if($(e.target).hasClass('gantt_tree_icon')){
                if($(e.target).hasClass('gantt_open'))
                    gantt.open(id);
                else if($(e.target).hasClass('gantt_close'))
                    gantt.close(id);
            } else {
                gantt.selectTask(id);
                //$('#gantt_contextmenu_'+id).triggerHandler('contextmenu');
                var ganttTaskNameSection;
                var ganttProgressBar = $(e.target).parents('.gantt_task_line');
                if(ganttProgressBar.length == 0) {
                    ganttTaskNameSection = $(e.target).parents('.gantt_row');
                } else {
                    var tidFromBarSection = ganttProgressBar.attr('task_id');
                    ganttTaskNameSection = $('.gantt_row[task_id="'+tidFromBarSection+'"]');
                }
                
                if(ganttTaskNameSection.find('#ganttNav').css('display') == 'none')
                    $('#gantt_contextmenu_'+id).triggerHandler('contextmenu');
                else
                    ganttTaskNameSection.find('#ganttNav').css('display','none');
            }
        });
        
        
        // Lightbox event
        /*
    gantt.attachEvent("onTaskRowClick", function(id,e){
        gantt.showLightbox(id);
    });
    */
                // Drag Task 
                // Added/Modified by Narendra -- start --
                var oldStartDate; var oldEndDate;  var childTasksLastStatus = [];
                gantt.attachEvent("onBeforeTaskDrag", function(id, mode, e){
                   var modes = gantt.config.drag_mode;
                   var taskObj = gantt.getTask(id);
                   if(mode == modes.resize && taskObj.objType == 'task')
                      return false;
                   oldStartDate = taskObj.start_date;
                   oldEndDate = taskObj.end_date;
                    
                   gantt.eachTask(function(child){
                       childTasksLastStatus.push({id: child.id, startDate: child.start_date, endDate: child.end_date});
                   },id );
                    
                   return '{!musAct[0].Drag_to_change_date_Detail__c}'=='true';
                });
                
                var childTasks = [];
            	var diff;
                // moving all childs together with the parent -- start --
                gantt.attachEvent("onTaskDrag", function(id, mode, task, original){
                    var modes = gantt.config.drag_mode;
                    taskBeingDragged = task;
                    if(mode == modes.move) {
                        diff = task.start_date - original.start_date;
                        gantt.eachTask(function(child){
                            child.start_date = new Date(+child.start_date + diff);
                            child.end_date = new Date(+child.end_date + diff);
                            gantt.refreshTask(child.id, true);
                        },id );
                    }
                    return true;
                });
                
            	var globalTaskIdOnDrag;
            	var globalTaskStartDateOnDrag;
            	var globalTaskEndDateOnDrag;
                gantt.attachEvent("onAfterTaskDrag", function(id, mode, e){
                    var modes = gantt.config.drag_mode;
                    var taskObj = gantt.getTask(id);
                    if(mode == modes.move){
                        gantt.eachTask(function(child){
                            gantt.roundTaskDates(child);
                            gantt.refreshTask(child.id, true);
                            childTasks.push({id: child.id, startDate: child.start_date, endDate: child.end_date});
                        },id );
                    }
                    
                    var confirmMsg = '';
                    var tempTaskEndDate = new Date(taskObj.end_date.getTime());
                    tempTaskEndDate.setDate(tempTaskEndDate.getDate()-1);
                    var formattedStartDate = ("0" + (taskObj.start_date.getMonth()+1)).slice(-2) + '/' + ("0" + (taskObj.start_date.getDate())).slice(-2) + '/' + ("0" + taskObj.start_date.getFullYear()).slice(-2);
                    var formattedEndDate = ("0" + (tempTaskEndDate.getMonth()+1)).slice(-2) + '/' + ("0" + (tempTaskEndDate.getDate())).slice(-2) + '/' + ("0" + tempTaskEndDate.getFullYear()).slice(-2);
                    
                    var tempOldEndDate = new Date(oldEndDate.getTime());
                    tempOldEndDate.setDate(tempOldEndDate.getDate()-1);
                    var formattedOldStartDate = ("0" + (oldStartDate.getMonth()+1)).slice(-2) + '/' + ("0" + oldStartDate.getDate()).slice(-2) + '/' + ("0" + oldStartDate.getFullYear()).slice(-2);
                    var formattedOldEndDate = ("0" + (tempOldEndDate.getMonth()+1)).slice(-2) + '/' + ("0" + (tempOldEndDate.getDate())).slice(-2) + '/' + ("0" + tempOldEndDate.getFullYear()).slice(-2);
                    if(mode == modes.move) {
                        confirmMsg = '<span>Will you change the dates for <b>'+ taskObj.text+'</b>:<br/>start date from <b>'+formattedOldStartDate+'</b> to <b>'+formattedStartDate+'</b><br/>and end date from <b>'+formattedOldEndDate+'</b> to <b>'+formattedEndDate+'</b>?</span><br/>';
                        if(gantt.hasChild(id))
                            confirmMsg += '<br/><span style="font-size: 12px;">Note: child nodes will be moved accordingly.</span>';
                    } else if(mode == modes.resize) {
                        if(oldStartDate==taskObj.start_date) {
                            confirmMsg = '<span>Will you change end date for <b>'+ taskObj.text+'</b> from <b>'+formattedOldEndDate+'</b> to <b>'+formattedEndDate + '</b>?</span>';
                        } else if(oldEndDate==taskObj.end_date) {
                            confirmMsg = '<span>Will you change start date for <b>'+ taskObj.text+'</b> from <b>'+formattedOldStartDate+'</b> to <b>'+formattedStartDate + '</b>?</span>';
                        }
                    }
                    /*if(confirm(confirmMsg))
                        updateTaskDate(id, taskObj.start_date, taskObj.end_date);*/
                     
                    globalTaskIdOnDrag = id;
                    globalTaskStartDateOnDrag = taskObj.start_date;
                    globalTaskEndDateOnDrag = new Date(taskObj.end_date.getTime());
                    globalTaskEndDateOnDrag.setDate(globalTaskEndDateOnDrag.getDate()-1);
                    confirmUser(confirmMsg);
                });        
                // Added/Modified by Narendra -- end --
                
        
        gantt.config.details_on_dblclick = false;
        gantt.config.initial_scroll = true;
        gantt.config.show_progress = true;
        gantt.config.drag_resize = true;
        gantt.config.drag_progress = false;
        gantt.config.drag_move = true;
        gantt.config.drag_links = false;
        gantt.config.sort = true;
        
        // Highlight weekends
        gantt.templates.scale_cell_class = function(date){
            if(timeOptions[0].checked == true){
                if(date.getDay()==0||date.getDay()==6){
                    return "weekend";
                }
            }
        };
        gantt.templates.task_cell_class = function(item,date){
            if(timeOptions[0].checked == true){
                if(date.getDay()==0||date.getDay()==6){ 
                    return "weekend" ;
                }
            }
        };
        
        // Set column width
        gantt.config.min_column_width = 30;
        gantt.config.start_date = startDate;
        gantt.config.end_date  = endDate ;
        gantt.init("gantt");   
        gantt.parse(<apex:outputText value="{!dataString}" escape="true"/>);
        console.log(<apex:outputText value="{!dataString}" escape="true"/>);     
        
         // added by Narendra, to update task date on drag
                function updateTaskDate(id, startDate, endDate){
                    gantt.updateTask(id);
                    sforce.connection.sessionId = "{!$Api.Session_ID}"; 
                    var a;
                    if(gantt.getTask(id).objType == 'project')
                        a = new sforce.SObject("musqot__Project__c");
                    if(gantt.getTask(id).objType == 'subproject')
                        a = new sforce.SObject("musqot__Subproject__c");
                    if(gantt.getTask(id).objType == 'activity'){
                        a = new sforce.SObject("musqot__Marketing_activity__c");
                        a.Id = id; 
                        
                        //converting date to datetime format
                        st_time = toDateTime(startDate);
                        end_time = toDateTime(endDate);
                        
                        a.musqot__Starts_date__c = st_time;  
                        a.musqot__Ends_date__c = end_time;                  
                        sforce.connection.update([a]);
                    } else if(gantt.getTask(id).objType == 'task') {
                    	a = new sforce.SObject("Task");
                        a.Id = id;
                        a.ActivityDate  = startDate;                 
                        sforce.connection.update([a]);
                    } else{                       
                        a.Id = id;  
                        a.musqot__Starts_date__c = startDate;  
                        a.musqot__Ends_date__c = endDate;                  
                        sforce.connection.update([a]);
                    }
                    /* gantt.getTask(id).start_date = startDate;
                    gantt.getTask(id).end_date = endDate;                  
                    gantt.updateTask(id); */
                    
                    updateChildTasks();
                }
                
                // added by Narendra
                // to update corresponding child tasks together with parent tasks
                function updateChildTasks() {
                    for(var i=0; i<childTasks.length; i++) {
                        var task = childTasks[i];
                        var tempChildEndDate = new Date(task.endDate.getTime());
                        tempChildEndDate.setDate(tempChildEndDate.getDate()-1);
                        gantt.updateTask(task["id"]);      
                        sforce.connection.sessionId = "{!$Api.Session_ID}"; 
                        var a;
                        if(gantt.getTask(task["id"]).objType == 'project')
                            a = new sforce.SObject("musqot__Project__c");
                        if(gantt.getTask(task["id"]).objType == 'subproject')
                            a = new sforce.SObject("musqot__Subproject__c");
                        if(gantt.getTask(task["id"]).objType == 'activity') {
                            a = new sforce.SObject("musqot__Marketing_activity__c");
                            a.Id = task["id"]; 
                            //converting date to datetime format
                            st_time = toDateTime(task["startDate"]);
                            end_time = toDateTime(tempChildEndDate);
                            a.musqot__Starts_date__c = st_time;  
                            a.musqot__Ends_date__c = end_time;                   
                            sforce.connection.update([a]);
                        } else if(gantt.getTask(task["id"]).objType == 'task') {
                            a = new sforce.SObject("Task");
                            a.Id = task["id"];
                            a.ActivityDate  = task["startDate"];                 
                            sforce.connection.update([a]);
                        } else{                       
                            a.Id = task["id"];  
                            a.musqot__Starts_date__c = task["startDate"];  
                            a.musqot__Ends_date__c = tempChildEndDate;                   
                            sforce.connection.update([a]);
                        }
                        /* gantt.getTask(task["id"]).start_date = task["startDate"];
                        gantt.getTask(task["id"]).end_date = tempChildEndDate;                   
                        gantt.updateTask(task["id"]); */
                    }
                    
                    childTasksLastStatus = [];
                    childTasks = [];
                    
                    $("#dragPopup #dragPopupLower .gear-rotate").hide();
                    $("#dragPopup #dragPopupLower span").hide();
                    $("#dragPopup #dragPopupLower i.success-mark").fadeIn('slow');
                    setTimeout(function(){
                    	$('.tr-bg').hide();$('#dragPopup').fadeOut();
                    }, 1500);
                    
                    gantt.init("gantt");
                }
                
                function confirmUser(msg) {
                    $('.tr-bg').show();
                    $('#dragPopup #dragPopupUpper').html(msg).show();
                    $("#dragPopup #dragPopupLower i.success-mark").hide();
                    $("#dragPopup #dragPopupLower button").show();
                	$('#dragPopup').fadeIn();
                }
            
                function showloader() {
                    $("#dragPopup #dragPopupUpper").slideUp('slow');
                    $("#dragPopup #dragPopupLower button").hide();
                    $("#dragPopup #dragPopupLower .gear-rotate").css('display','inline-block');
                    $("#dragPopup #dragPopupLower span").fadeIn('slow');
                }
            
                function revertDrag() {
                    var t = gantt.getTask(globalTaskIdOnDrag);
                    t.start_date = oldStartDate;
                    t.end_date = oldEndDate;
                    gantt.refreshTask(globalTaskIdOnDrag);
                    for(var i=0; i<childTasksLastStatus.length; i++) {
                        t = gantt.getTask(childTasksLastStatus[i].id);
                        t.start_date = childTasksLastStatus[i].startDate;
                        t.end_date = childTasksLastStatus[i].endDate;
                        gantt.refreshTask(childTasksLastStatus[i].id);
                    }
                    $('.tr-bg').hide();$('#dragPopup').fadeOut();
                    childTasksLastStatus = [];
                    childTasks = [];
                }
            
            function remove_duplicates(objectsArray) {
                var usedObjects = [];
                var uniqueObj = [];
                for (var i=objectsArray.length - 1; i>=0; i--) {
                    if ($.inArray(objectsArray[i].id, usedObjects)==-1) {
                        usedObjects.push(objectsArray[i].id);
                        uniqueObj.push(objectsArray[i]);
                    }
                }
                return uniqueObj;
            }
                
        
        $(function(){
            	$('input#startDate').datepicker({
                	changeMonth: true,
                    changeYear: true,
                    defaultDate: -30,
                    showAnim: 'slide',
                    onSelect: function (dateText, inst) {
                        $('input#startDate').datepicker('hide');
                        gantt.config.start_date = new Date(dateText);
                        gantt.config.end_date  = new Date($('input#endDate').val());
                        gantt.init("gantt");
                        drawChart();
                    },
                    onClose: function(selectedDate){
                        $("input#endDate").datepicker("option", "minDate", selectedDate);
                    }
                });
                
            	$('input#endDate').datepicker({
                	changeMonth: true,
                    changeYear: true,
                    defaultDate: +60,
                    showAnim: 'slide',
                    onSelect: function (dateText, inst) {
                        $('input#endDate').datepicker('hide');
                        gantt.config.start_date = new Date($('input#startDate').val());
                        gantt.config.end_date  = new Date(dateText);
                        gantt.init("gantt");
                        drawChart();
                    },
                    onClose: function(selectedDate){
                        $("input#startDate").datepicker("option", "maxDate", selectedDate);
                    }
                });
            });
        
        	function applyDatePicker() {
                var sdfc = new Date("{!FilterStartDate}");
                var formattedSdfc = ("0" + (sdfc.getMonth()+1)).slice(-2) + '/' + ("0" + (sdfc.getDate())).slice(-2) + '/' + sdfc.getFullYear();
                $('.popUpSD').val(formattedSdfc);
                var edfc = new Date("{!FilterEndDate}");
                var formattedEdfc = ("0" + (edfc.getMonth()+1)).slice(-2) + '/' + ("0" + (edfc.getDate())).slice(-2) + '/' + edfc.getFullYear();
                $('.popUpED').val(formattedEdfc);
            	$('.popUpSD').datepicker({
                	changeMonth: true,
                    changeYear: true,
                    showAnim: 'slide',
                    onClose: function(selectedDate){
                        $(".popUpED").datepicker("option", "minDate", selectedDate);
                    }
                });
                $('.popUpED').datepicker({
                	changeMonth: true,
                    changeYear: true,
                    defaultDate: new Date(formattedEdfc),
                    showAnim: 'slide',
                    onClose: function(selectedDate){
                        $(".popUpSD").datepicker("option", "maxDate", selectedDate);
                    }
                });
            }
        
        	function showInfoPopup(id) {
                var taskObj = gantt.getTask(id);
                $('#infoPopup .upper #name').text(taskObj.text);
                $('#infoPopup .upper #description').text(taskObj.description);
               
                var itemType = taskObj.objType;
                var typeLabel = '';
                var ownerLabel = '';
                var sdLabel = '';
                var openLink = baseUrl + id;
                if(itemType == 'subproject') {
                	typeLabel = '{!$label.sub_Project_type}';
                    ownerLabel = '{!$label.pt_Owner}';
                    sdLabel = '{!$label.pt_Start_date}';
                    $('#infoPopup .upper #ed').show();
                }
                else if(itemType == 'activity') {
                   	typeLabel = '{!$Label.mrk_Activity_type}';
                    ownerLabel = '{!$label.pt_Owner}';
                    sdLabel = '{!$label.pt_Start_date}';
                    $('#infoPopup .upper #ed').show();
                }
                if(itemType == 'task') {
                    typeLabel = '{!$Label.tsk_Subject}';
                    ownerLabel = '{!$label.tsk_Assigned_To}';
                    sdLabel = '{!$label.tsk_Due_Date}';
                    $('#infoPopup .upper #ed').hide();
                    
                    var ganttdetailid = GetQueryStringByParameter('id');
                    var gantttaskurl = 'apex/TaskEditpage?taskid=' + id + '&ganttid=' + ganttdetailid;
                    openLink = baseUrl + gantttaskurl;
                }
                $('#infoPopup .upper #owner th').text(ownerLabel);
                $('#infoPopup .upper #owner td').text(taskObj.owner);
                $('#infoPopup .upper #type th').text(typeLabel);
                $('#infoPopup .upper #type td').text(taskObj.projectType);
                var sd = taskObj.start_date;
                var formattedSd = ("0" + (sd.getMonth()+1)).slice(-2) + '-' + ("0" + (sd.getDate())).slice(-2) + '-' + sd.getFullYear();
                $('#infoPopup .upper #sd th').text(sdLabel);
                $('#infoPopup .upper #sd td').text(formattedSd);
                if(itemType != 'task') {
                    var ed = taskObj.end_date;
                    var formattedEd = ("0" + (ed.getMonth()+1)).slice(-2) + '-' + ("0" + (ed.getDate()-1)).slice(-2) + '-' + ed.getFullYear();
                    $('#infoPopup .upper #ed td').text(formattedEd);
                }
                $('#infoPopup .lower input').on('click',function(){
                	top.location.href = openLink;
                });
                $('.tr-bg').show();
                //$('#infoPopup').fadeIn('fast');
                $('#infoPopup').animate({top:'75px'},300);
            }
        	function closeInfoPopup() {
                //$('#infoPopup').slideUp('fast');
                $('.tr-bg').hide();
            	$('#infoPopup').animate({top:'-1000px'},300);
            }
        </script>
    </div>
</div> 

    <!-- Custom confirm box -->
    <div class="popup" id="dragPopup">
        <div class="upper" id="dragPopupUpper">Are you sure to perform this action?</div>
        <div class="stroke"></div>
        <div class="lower" id="dragPopupLower">
            <div class="gear-rotate"></div>
            <span>Updating...</span>
            <i class="icon-large icon-ok success-mark"></i>
            <button onclick="showloader();setTimeout(function(){updateTaskDate(globalTaskIdOnDrag, globalTaskStartDateOnDrag, globalTaskEndDateOnDrag);}, 600);"><i class="icon-large icon-ok"></i>Yes</button>
            <button onclick="revertDrag();"><i class="icon-large icon-remove"></i>No</button>
        </div>
    </div>
    <div class="tr-bg"></div>

	<div class="popup" id="infoPopup">
        <div class="upper">
            <i class="icon-large icon-remove" 
               onclick="closeInfoPopup();">
            </i>
        	<h2 id="name"></h2>
            <div id="description"></div><br/>
            <table border="0">
                <tr id="owner">
                	<th></th>
                    <td></td>
                </tr>
                <tr>
                	<th>&nbsp;</th>
                    <td>&nbsp;</td>
                </tr>
                <tr id="type">
                	<th></th>
                    <td></td>
                </tr>
                <tr>
                	<th>&nbsp;</th>
                    <td>&nbsp;</td>
                </tr>
                <tr id="sd">
                	<th></th>
                    <td></td>
                </tr>
                <tr id="ed">
                	<th>{!$label.pt_End_date}</th>
                    <td></td>
                </tr>
            </table>
        </div>
        <div class="stroke"></div>
        <div class="lower">
            <input type="button" value="{!$Label.btn_status_open}" />
        </div>
    </div>
</apex:page>